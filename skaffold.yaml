apiVersion: skaffold/v4beta11
kind: Config
metadata:
  name: task-canvas-db
build:
  local:
    push: false
    useBuildkit: true
  artifacts:
    - image: task-canvas-progress
      context: ../task-canvas-progress
      docker:
        dockerfile: Dockerfile
    - image: task-canvas-web
      context: ../task-canvas/frontend
      docker:
        dockerfile: Dockerfile
    - image: task-canvas-api
      context: ../task-canvas/backend
      docker:
        dockerfile: Dockerfile
manifests:
  helm:
    releases:
      - name: task-canvas-db
        chartPath: helm/task-canvas-db
      - name: elder-things-encyclopedia
        chartPath: helm/elder-things-encyclopedia-db
      - name: task-canvas-api-mock
        chartPath: helm/wiremock
        setValues:
          deployment.name: task-canvas-api-mock
          service.name: task-canvas-api-mock
          service.targetPort: 8080
          service.port: 8080
      - name: task-canvas-progress
        chartPath: helm/task-canvas-progress
        setValues:
          image.repository: task-canvas-progress
          image.tag: latest
          image.imagePullPolicy: Never
      - name: task-canvas-web
        chartPath: helm/task-canvas-web
        setValues:
          image.repository: task-canvas-web
          image.tag: latest
          image.imagePullPolicy: Never
          service.port: 3000
          deployment.containerPort: 3000
        setValueTemplates:
          taskCanvasWeb:
            NEXT_PORT: '{{ default "3000" .TASK_CANVAS_WEB_PORT }}'
            NEXT_BACKEND_BASE_URL: '{{ default "http://task-canvas-api-svc:8080" .TASK_CANVAS_API_URL }}'
      - name: task-canvas-api
        chartPath: helm/task-canvas-api
        setValues:
          image.repository: task-canvas-api
          image.tag: latest
          image.imagePullPolicy: Never
          service.port: 8080
          deployment.containerPort: 8080
        setValueTemplates:
          taskCanvasApi:
            POSTGRES_HOST: '{{ default "task-canvas-db-svc" .TASK_CANVAS_DB_POSTGRES_HOST }}'
            POSTGRES_PORT: '{{ default "10080" .TASK_CANVAS_DB_POSTGRES_PORT }}'
            POSTGRES_DB: '{{ default "task_canvas" .TASK_CANVAS_DB_POSTGRES_DB }}'
            POSTGRES_USER: '{{ default "developer" .TASK_CANVAS_DB_POSTGRES_USER }}'
            POSTGRES_PASSWORD: '{{ default "developer" .TASK_CANVAS_DB_POSTGRES_PASSWORD }}'
            GO_PORT: '{{ default "8080" .TASK_CANVAS_API_PORT }}'
            JWT_SECRET: '{{ default "BKamxYHzZIJdniHhNAy4J+xs4S2USSwt678Wo4vV8vk=" .TASK_CANVAS_API_JWT_SECRET }}'
profiles:
  - name: local
    activation:
      - command: local
    patches:
      - op: remove
        path: /manifests/helm/releases/2
      - op: remove
        path: /manifests/helm/releases/1
  - name: task-canvas-web-e2e
    activation:
      - command: task-canvas-web-e2e
    patches:
      - op: remove
        path: /manifests/helm/releases/5
      - op: remove
        path: /manifests/helm/releases/4
      - op: remove
        path: /manifests/helm/releases/1
      - op: remove
        path: /manifests/helm/releases/0
      - op: add
        path: /manifests/helm/releases/0
        value:
          name: task-canvas-web
          chartPath: helm/task-canvas-web
          setValues:
            image.repository: task-canvas-web
            image.tag: latest
            image.imagePullPolicy: Never
            service.port: 3000
            deployment.containerPort: 3000
          setValueTemplates:
            taskCanvasWeb:
              NEXT_PORT: 3000
              NEXT_BACKEND_BASE_URL: 'http://task-canvas-api-mock:8080'
  - name: task-canvas-api-e2e
    activation:
      - command: task-canvas-api-e2e
    patches:
      - op: remove
        path: /manifests/helm/releases/4
      - op: remove
        path: /manifests/helm/releases/3
      - op: remove
        path: /manifests/helm/releases/2
      - op: remove
        path: /manifests/helm/releases/1
